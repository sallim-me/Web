{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryuna\\\\sallim\\\\src\\\\pages\\\\MyPosts\\\\MyPosts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport Header from \"../../components/common/Header/Header\";\nimport * as S from \"./styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MyPosts = () => {\n  _s();\n  const navigate = useNavigate();\n  const [currentPage, setCurrentPage] = useState(1);\n  const postsPerPage = 12;\n  const savedPosts = localStorage.getItem(\"posts\");\n  const posts = savedPosts ? JSON.parse(savedPosts) : [];\n  const myPosts = posts.filter(post => post.isAuthor);\n\n  // 페이지네이션 계산\n  const totalPages = Math.ceil(myPosts.length / postsPerPage);\n  const startIndex = (currentPage - 1) * postsPerPage;\n  const endIndex = startIndex + postsPerPage;\n  const currentPosts = myPosts.slice(startIndex, endIndex);\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      title: \"\\uB0B4\\uAC00 \\uC4F4 \\uAE00\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.PostGrid, {\n      children: currentPosts.map(post => /*#__PURE__*/_jsxDEV(S.Card, {\n        onClick: () => navigate(`/post/detail/${post.id}`),\n        children: [/*#__PURE__*/_jsxDEV(S.ImageBox, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.imageUrl,\n            alt: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(S.CardTitle, {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(S.CardPrice, {\n          children: [post.price.toLocaleString(), \"\\uC6D0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(S.Pagination, {\n      children: Array.from({\n        length: totalPages\n      }, (_, i) => i + 1).map(page => /*#__PURE__*/_jsxDEV(S.PageButton, {\n        isActive: currentPage === page,\n        onClick: () => handlePageChange(page),\n        children: page\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n_s(MyPosts, \"Qb1TdfgC3GPK8eOTlcjNyVYADC0=\", false, function () {\n  return [useNavigate];\n});\n_c = MyPosts;\nexport default MyPosts;\nvar _c;\n$RefreshReg$(_c, \"MyPosts\");","map":{"version":3,"names":["React","useState","useNavigate","Header","S","jsxDEV","_jsxDEV","MyPosts","_s","navigate","currentPage","setCurrentPage","postsPerPage","savedPosts","localStorage","getItem","posts","JSON","parse","myPosts","filter","post","isAuthor","totalPages","Math","ceil","length","startIndex","endIndex","currentPosts","slice","handlePageChange","pageNumber","Container","children","title","fileName","_jsxFileName","lineNumber","columnNumber","PostGrid","map","Card","onClick","id","ImageBox","src","imageUrl","alt","CardTitle","CardPrice","price","toLocaleString","Pagination","Array","from","_","i","page","PageButton","isActive","_c","$RefreshReg$"],"sources":["C:/Users/ryuna/sallim/src/pages/MyPosts/MyPosts.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport Header from \"../../components/common/Header/Header\";\r\nimport * as S from \"./styled\";\r\n\r\nconst MyPosts = () => {\r\n  const navigate = useNavigate();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const postsPerPage = 12;\r\n\r\n  const savedPosts = localStorage.getItem(\"posts\");\r\n  const posts = savedPosts ? JSON.parse(savedPosts) : [];\r\n  const myPosts = posts.filter((post) => post.isAuthor);\r\n\r\n  // 페이지네이션 계산\r\n  const totalPages = Math.ceil(myPosts.length / postsPerPage);\r\n  const startIndex = (currentPage - 1) * postsPerPage;\r\n  const endIndex = startIndex + postsPerPage;\r\n  const currentPosts = myPosts.slice(startIndex, endIndex);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  return (\r\n    <S.Container>\r\n      <Header title=\"내가 쓴 글\" />\r\n      <S.PostGrid>\r\n        {currentPosts.map((post) => (\r\n          <S.Card\r\n            key={post.id}\r\n            onClick={() => navigate(`/post/detail/${post.id}`)}\r\n          >\r\n            <S.ImageBox>\r\n              <img src={post.imageUrl} alt={post.title} />\r\n            </S.ImageBox>\r\n            <S.CardTitle>{post.title}</S.CardTitle>\r\n            <S.CardPrice>{post.price.toLocaleString()}원</S.CardPrice>\r\n          </S.Card>\r\n        ))}\r\n      </S.PostGrid>\r\n      {totalPages > 1 && (\r\n        <S.Pagination>\r\n          {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (\r\n            <S.PageButton\r\n              key={page}\r\n              isActive={currentPage === page}\r\n              onClick={() => handlePageChange(page)}\r\n            >\r\n              {page}\r\n            </S.PageButton>\r\n          ))}\r\n        </S.Pagination>\r\n      )}\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default MyPosts;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}