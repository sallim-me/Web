{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryuna\\\\sallim\\\\src\\\\pages\\\\Login\\\\Login.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as S from \"./styled\";\nimport Input from \"../../components/Input/Input\";\nimport Button from \"../../components/common/Button/Button\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Login = () => {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    email: \"\",\n    password: \"\"\n  });\n  const [errors, setErrors] = useState({});\n  const handleChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: value\n    }));\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      // TODO: 실제 로그인 API 호출\n      // 임시로 토큰을 저장하고 페이지 이동\n      localStorage.setItem(\"token\", \"dummy-token\");\n      navigate(\"/postlist\");\n    } catch (error) {\n      console.error(\"Login failed:\", error);\n    }\n  };\n  const handleSignUp = () => {\n    navigate(\"/signup\");\n  };\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(S.Title, {\n      children: \"\\uB85C\\uADF8\\uC778\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Form, {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(S.Input, {\n        type: \"email\",\n        name: \"email\",\n        placeholder: \"\\uC774\\uBA54\\uC77C\",\n        value: formData.email,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Input, {\n        type: \"password\",\n        name: \"password\",\n        placeholder: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n        value: formData.password,\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Button, {\n        type: \"submit\",\n        children: \"\\uB85C\\uADF8\\uC778\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.LinkButton, {\n      onClick: () => navigate(\"/signup\"),\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\\uD558\\uAE30\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_s(Login, \"orcltCngQNgS9CPYNqpWzLNeHt8=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","S","Input","Button","jsxDEV","_jsxDEV","Login","_s","navigate","formData","setFormData","email","password","errors","setErrors","handleChange","e","name","value","target","prev","handleSubmit","preventDefault","localStorage","setItem","error","console","handleSignUp","Container","children","Title","fileName","_jsxFileName","lineNumber","columnNumber","Form","onSubmit","type","placeholder","onChange","required","LinkButton","onClick","_c","$RefreshReg$"],"sources":["C:/Users/ryuna/sallim/src/pages/Login/Login.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as S from \"./styled\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport Button from \"../../components/common/Button/Button\";\r\n\r\nconst Login = () => {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({\r\n    email: \"\",\r\n    password: \"\",\r\n  });\r\n  const [errors, setErrors] = useState({});\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      // TODO: 실제 로그인 API 호출\r\n      // 임시로 토큰을 저장하고 페이지 이동\r\n      localStorage.setItem(\"token\", \"dummy-token\");\r\n      navigate(\"/postlist\");\r\n    } catch (error) {\r\n      console.error(\"Login failed:\", error);\r\n    }\r\n  };\r\n\r\n  const handleSignUp = () => {\r\n    navigate(\"/signup\");\r\n  };\r\n\r\n  return (\r\n    <S.Container>\r\n      <S.Title>로그인</S.Title>\r\n      <S.Form onSubmit={handleSubmit}>\r\n        <S.Input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"이메일\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <S.Input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"비밀번호\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <S.Button type=\"submit\">로그인</S.Button>\r\n      </S.Form>\r\n      <S.LinkButton onClick={() => navigate(\"/signup\")}>\r\n        회원가입하기\r\n      </S.LinkButton>\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}