{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryuna\\\\sallim\\\\src\\\\pages\\\\PostList\\\\PostList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as S from \"./styled\";\nimport PostCard from \"../../components/Post/PostCard/PostCard\";\nimport Header from \"../../components/common/Header/Header\";\nimport Navbar from \"../../components/common/Navbar/Navbar\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostList = () => {\n  _s();\n  const navigate = useNavigate();\n  const [selectedCategories, setSelectedCategories] = useState([]);\n  const [selectedStatus, setSelectedStatus] = useState(\"all\");\n  const categories = [\"냉장고\", \"에어컨\", \"세탁기\"];\n  const statusOptions = [{\n    value: \"all\",\n    label: \"전체 상태\"\n  }, {\n    value: \"available\",\n    label: \"판매중\"\n  }, {\n    value: \"reserved\",\n    label: \"예약중\"\n  }, {\n    value: \"sold\",\n    label: \"판매완료\"\n  }];\n\n  // 임시 데이터\n  const posts = [{\n    id: 1,\n    title: \"삼성 냉장고 팝니다\",\n    price: 500000,\n    imageUrl: \"https://placeholder.com/300x200\",\n    isScraped: false\n  }\n  // ... 더 많은 게시글 데이터\n  ];\n  const toggleCategory = category => {\n    setSelectedCategories(prev => prev.includes(category) ? prev.filter(c => c !== category) : [...prev, category]);\n  };\n  const handleScrap = postId => {\n    // TODO: 스크랩 처리 로직\n    console.log(\"Scrap toggled for post:\", postId);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Container, {\n      children: [/*#__PURE__*/_jsxDEV(S.FilterSection, {\n        children: categories.map(category => /*#__PURE__*/_jsxDEV(S.FilterButton, {\n          isActive: selectedCategories.includes(category),\n          onClick: () => toggleCategory(category),\n          children: category\n        }, category, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.FilterSection, {\n        children: statusOptions.map(option => /*#__PURE__*/_jsxDEV(S.FilterButton, {\n          isActive: selectedStatus === option.value,\n          onClick: () => setSelectedStatus(option.value),\n          children: option.label\n        }, option.value, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.PostGrid, {\n        children: posts.map(post => /*#__PURE__*/_jsxDEV(PostCard, {\n          ...post,\n          onScrapClick: () => handleScrap(post.id)\n        }, post.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.AddButton, {\n        onClick: () => navigate(\"/post/create\"),\n        children: \"+\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(PostList, \"SXScvNLnz1WaSjHFDF0rBVFQVaQ=\", false, function () {\n  return [useNavigate];\n});\n_c = PostList;\nexport default PostList;\nvar _c;\n$RefreshReg$(_c, \"PostList\");","map":{"version":3,"names":["React","useState","useNavigate","S","PostCard","Header","Navbar","jsxDEV","_jsxDEV","Fragment","_Fragment","PostList","_s","navigate","selectedCategories","setSelectedCategories","selectedStatus","setSelectedStatus","categories","statusOptions","value","label","posts","id","title","price","imageUrl","isScraped","toggleCategory","category","prev","includes","filter","c","handleScrap","postId","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","Container","FilterSection","map","FilterButton","isActive","onClick","option","PostGrid","post","onScrapClick","AddButton","_c","$RefreshReg$"],"sources":["C:/Users/ryuna/sallim/src/pages/PostList/PostList.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as S from \"./styled\";\r\nimport PostCard from \"../../components/Post/PostCard/PostCard\";\r\nimport Header from \"../../components/common/Header/Header\";\r\nimport Navbar from \"../../components/common/Navbar/Navbar\";\r\n\r\nconst PostList = () => {\r\n  const navigate = useNavigate();\r\n  const [selectedCategories, setSelectedCategories] = useState([]);\r\n  const [selectedStatus, setSelectedStatus] = useState(\"all\");\r\n\r\n  const categories = [\"냉장고\", \"에어컨\", \"세탁기\"];\r\n  const statusOptions = [\r\n    { value: \"all\", label: \"전체 상태\" },\r\n    { value: \"available\", label: \"판매중\" },\r\n    { value: \"reserved\", label: \"예약중\" },\r\n    { value: \"sold\", label: \"판매완료\" },\r\n  ];\r\n\r\n  // 임시 데이터\r\n  const posts = [\r\n    {\r\n      id: 1,\r\n      title: \"삼성 냉장고 팝니다\",\r\n      price: 500000,\r\n      imageUrl: \"https://placeholder.com/300x200\",\r\n      isScraped: false,\r\n    },\r\n    // ... 더 많은 게시글 데이터\r\n  ];\r\n\r\n  const toggleCategory = (category) => {\r\n    setSelectedCategories((prev) =>\r\n      prev.includes(category)\r\n        ? prev.filter((c) => c !== category)\r\n        : [...prev, category]\r\n    );\r\n  };\r\n\r\n  const handleScrap = (postId) => {\r\n    // TODO: 스크랩 처리 로직\r\n    console.log(\"Scrap toggled for post:\", postId);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Header />\r\n      <S.Container>\r\n        <S.FilterSection>\r\n          {categories.map((category) => (\r\n            <S.FilterButton\r\n              key={category}\r\n              isActive={selectedCategories.includes(category)}\r\n              onClick={() => toggleCategory(category)}\r\n            >\r\n              {category}\r\n            </S.FilterButton>\r\n          ))}\r\n        </S.FilterSection>\r\n\r\n        <S.FilterSection>\r\n          {statusOptions.map((option) => (\r\n            <S.FilterButton\r\n              key={option.value}\r\n              isActive={selectedStatus === option.value}\r\n              onClick={() => setSelectedStatus(option.value)}\r\n            >\r\n              {option.label}\r\n            </S.FilterButton>\r\n          ))}\r\n        </S.FilterSection>\r\n\r\n        <S.PostGrid>\r\n          {posts.map((post) => (\r\n            <PostCard\r\n              key={post.id}\r\n              {...post}\r\n              onScrapClick={() => handleScrap(post.id)}\r\n            />\r\n          ))}\r\n        </S.PostGrid>\r\n\r\n        <S.AddButton onClick={() => navigate(\"/post/create\")}>+</S.AddButton>\r\n      </S.Container>\r\n      <Navbar />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PostList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}