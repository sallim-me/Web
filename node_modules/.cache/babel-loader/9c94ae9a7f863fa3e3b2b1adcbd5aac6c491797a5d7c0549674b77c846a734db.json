{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryuna\\\\sallim\\\\src\\\\pages\\\\Post\\\\PostDetail\\\\PostDetail.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState, useMemo } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport * as S from \"./styled\";\nimport scrapOnIcon from \"../../../assets/scrap-on.svg\";\nimport scrapOffIcon from \"../../../assets/scrap-off.svg\";\nimport backIcon from \"../../../assets/back.svg\";\n// import { ReactComponent as EditIcon } from \"../../assets/icons/edit.svg\";\n// import { ReactComponent as DeleteIcon } from \"../../assets/icons/delete.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PostDetail = () => {\n  _s();\n  var _post$defectQuestions, _post$defectQuestions2, _post$defectQuestions3;\n  const navigate = useNavigate();\n  const {\n    id\n  } = useParams();\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([]);\n\n  // Mock data - 실제로는 API에서 받아와야 함\n  const savedPosts = localStorage.getItem(\"posts\");\n  const posts = savedPosts ? JSON.parse(savedPosts) : [];\n  const post = posts.find(p => p.id === Number(id)) || {\n    id: Number(id),\n    title: \"게시물을 찾을 수 없습니다\",\n    author: \"알 수 없음\",\n    authorId: \"unknown\",\n    isAuthor: false,\n    type: \"sell\",\n    status: \"available\",\n    category: \"알 수 없음\",\n    images: [],\n    modelName: \"알 수 없음\",\n    specifications: {\n      brand: \"알 수 없음\",\n      capacity: \"알 수 없음\",\n      powerConsumption: \"알 수 없음\",\n      size: \"알 수 없음\"\n    },\n    defectQuestions: {\n      cooling: \"알 수 없음\",\n      noise: \"알 수 없음\",\n      exterior: \"알 수 없음\"\n    },\n    description: \"해당 게시물을 찾을 수 없습니다.\",\n    price: 0,\n    sellingInfo: {\n      quantity: 0,\n      location: \"알 수 없음\",\n      pickupAvailable: false,\n      currentParticipants: 0\n    },\n    createdAt: new Date().toISOString()\n  };\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n  const [isScraped, setIsScraped] = useState(post.isScraped || false);\n  const getRandomColor = () => {\n    const colors = [\"#FF9AA2\", \"#FFB7B2\", \"#FFDAC1\", \"#E2F0CB\", \"#B5EAD7\", \"#C7CEEA\", \"#9FB3DF\", \"#B8B3E9\", \"#D4A5A5\", \"#9CADCE\"];\n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n  const profileColor = useMemo(() => getRandomColor(), []);\n  const initial = post !== null && post !== void 0 && post.author ? post.author.charAt(0) : \"?\";\n  const handleScrap = () => {\n    const updatedPosts = posts.map(p => p.id === Number(id) ? {\n      ...p,\n      isScraped: !p.isScraped\n    } : p);\n    localStorage.setItem(\"posts\", JSON.stringify(updatedPosts));\n    setIsScraped(!isScraped);\n  };\n\n  //   const handleEdit = () => {\n  //     navigate(`/post/edit/${id}`);\n  //   };\n\n  //   const handleDelete = () => {\n  //     if (window.confirm(\"정말로 삭제하시겠습니까?\")) {\n  //       // API call to delete post\n  //       navigate(\"/post\");\n  //     }\n  //   };\n\n  const handleBack = () => {\n    navigate(-1);\n  };\n  const handleCommentSubmit = e => {\n    e.preventDefault();\n    if (comment.trim() && comment.length <= 1000) {\n      setComments([...comments, {\n        id: Date.now(),\n        author: \"현재 사용자\",\n        content: comment,\n        createdAt: new Date().toISOString()\n      }]);\n      setComment(\"\");\n    }\n  };\n  const handleCommentDelete = commentId => {\n    setComments(comments.filter(comment => comment.id !== commentId));\n  };\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(S.Header, {\n      children: [/*#__PURE__*/_jsxDEV(S.BackButton, {\n        onClick: handleBack,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: backIcon,\n          alt: \"\\uB4A4\\uB85C \\uAC00\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Title, {\n        children: post.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.ScrapButton, {\n        onClick: handleScrap,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: isScraped ? scrapOnIcon : scrapOffIcon,\n          alt: \"\\uC2A4\\uD06C\\uB7A9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Content, {\n      children: [/*#__PURE__*/_jsxDEV(S.ImageSection, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.InfoSection, {\n        children: [/*#__PURE__*/_jsxDEV(S.Price, {\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            children: \"\\uAC00\\uACA9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n            children: [post.price.toLocaleString(), \"\\uC6D0\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.AuthorSection, {\n          children: [/*#__PURE__*/_jsxDEV(S.AuthorInfo, {\n            children: [/*#__PURE__*/_jsxDEV(S.ProfileInitial, {\n              backgroundColor: profileColor,\n              children: initial\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(S.Author, {\n              children: post.author\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(S.ChatButton, {\n            onClick: () => navigate(`/chat/${post.authorId}`),\n            children: \"\\uCC44\\uD305\\uD558\\uAE30\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.SpecificationSection, {\n          children: [/*#__PURE__*/_jsxDEV(S.Label, {\n            children: \"\\uC81C\\uD488 \\uC815\\uBCF4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(S.SpecificationText, {\n            children: post !== null && post !== void 0 && post.specifications && Object.values(post.specifications).some(value => value && value !== \"알 수 없음\") ? /*#__PURE__*/_jsxDEV(\"p\", {\n              children: post.specifications\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 17\n            }, this) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.DefectSection, {\n          children: [/*#__PURE__*/_jsxDEV(S.Label, {\n            children: \"\\uC0C1\\uD0DC \\uC815\\uBCF4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(S.DefectGrid, {\n            children: [/*#__PURE__*/_jsxDEV(S.DefectItem, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\uB0C9\\uAC01 \\uAE30\\uB2A5\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: (post === null || post === void 0 ? void 0 : (_post$defectQuestions = post.defectQuestions) === null || _post$defectQuestions === void 0 ? void 0 : _post$defectQuestions.cooling) || \"알 수 없음\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(S.DefectItem, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\uC18C\\uC74C\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: (post === null || post === void 0 ? void 0 : (_post$defectQuestions2 = post.defectQuestions) === null || _post$defectQuestions2 === void 0 ? void 0 : _post$defectQuestions2.noise) || \"알 수 없음\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 176,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(S.DefectItem, {\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"\\uC678\\uAD00\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                children: (post === null || post === void 0 ? void 0 : (_post$defectQuestions3 = post.defectQuestions) === null || _post$defectQuestions3 === void 0 ? void 0 : _post$defectQuestions3.exterior) || \"알 수 없음\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.Description, {\n          children: [/*#__PURE__*/_jsxDEV(S.Label, {\n            children: \"\\uC0C1\\uC138 \\uC124\\uBA85\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(S.DescriptionText, {\n            children: post.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.CommentSection, {\n        children: [/*#__PURE__*/_jsxDEV(S.Label, {\n          children: \"\\uB313\\uAE00\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.CommentForm, {\n          onSubmit: handleCommentSubmit,\n          children: [/*#__PURE__*/_jsxDEV(S.CommentInput, {\n            value: comment,\n            onChange: e => setComment(e.target.value),\n            maxLength: 1000,\n            placeholder: \"\\uB313\\uAE00\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694 (\\uCD5C\\uB300 1000\\uC790)\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(S.CommentButton, {\n            type: \"submit\",\n            children: \"\\uB4F1\\uB85D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(S.CommentList, {\n          children: comments.map(comment => /*#__PURE__*/_jsxDEV(S.CommentItem, {\n            children: [/*#__PURE__*/_jsxDEV(S.CommentHeader, {\n              children: [/*#__PURE__*/_jsxDEV(S.CommentAuthor, {\n                children: comment.author\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(S.CommentDate, {\n                children: new Date(comment.createdAt).toLocaleDateString()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 207,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(S.CommentContent, {\n              children: comment.content\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 17\n            }, this), comment.author === \"현재 사용자\" && /*#__PURE__*/_jsxDEV(S.CommentDeleteButton, {\n              onClick: () => handleCommentDelete(comment.id),\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 19\n            }, this)]\n          }, comment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 5\n  }, this);\n};\n_s(PostDetail, \"k/dcX2nsC4E4hS1SKHz3dIuamIU=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = PostDetail;\nexport default PostDetail;\nvar _c;\n$RefreshReg$(_c, \"PostDetail\");","map":{"version":3,"names":["React","useEffect","useState","useMemo","useNavigate","useParams","S","scrapOnIcon","scrapOffIcon","backIcon","jsxDEV","_jsxDEV","PostDetail","_s","_post$defectQuestions","_post$defectQuestions2","_post$defectQuestions3","navigate","id","comment","setComment","comments","setComments","savedPosts","localStorage","getItem","posts","JSON","parse","post","find","p","Number","title","author","authorId","isAuthor","type","status","category","images","modelName","specifications","brand","capacity","powerConsumption","size","defectQuestions","cooling","noise","exterior","description","price","sellingInfo","quantity","location","pickupAvailable","currentParticipants","createdAt","Date","toISOString","window","scrollTo","isScraped","setIsScraped","getRandomColor","colors","Math","floor","random","length","profileColor","initial","charAt","handleScrap","updatedPosts","map","setItem","stringify","handleBack","handleCommentSubmit","e","preventDefault","trim","now","content","handleCommentDelete","commentId","filter","Container","children","Header","BackButton","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","Title","ScrapButton","Content","ImageSection","InfoSection","Price","toLocaleString","AuthorSection","AuthorInfo","ProfileInitial","backgroundColor","Author","ChatButton","SpecificationSection","Label","SpecificationText","Object","values","some","value","DefectSection","DefectGrid","DefectItem","Description","DescriptionText","CommentSection","CommentForm","onSubmit","CommentInput","onChange","target","maxLength","placeholder","CommentButton","CommentList","CommentItem","CommentHeader","CommentAuthor","CommentDate","toLocaleDateString","CommentContent","CommentDeleteButton","_c","$RefreshReg$"],"sources":["C:/Users/ryuna/sallim/src/pages/Post/PostDetail/PostDetail.jsx"],"sourcesContent":["import React, { useEffect, useState, useMemo } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport * as S from \"./styled\";\nimport scrapOnIcon from \"../../../assets/scrap-on.svg\";\nimport scrapOffIcon from \"../../../assets/scrap-off.svg\";\nimport backIcon from \"../../../assets/back.svg\";\n// import { ReactComponent as EditIcon } from \"../../assets/icons/edit.svg\";\n// import { ReactComponent as DeleteIcon } from \"../../assets/icons/delete.svg\";\n\nconst PostDetail = () => {\n  const navigate = useNavigate();\n  const { id } = useParams();\n  const [comment, setComment] = useState(\"\");\n  const [comments, setComments] = useState([]);\n\n  // Mock data - 실제로는 API에서 받아와야 함\n  const savedPosts = localStorage.getItem(\"posts\");\n  const posts = savedPosts ? JSON.parse(savedPosts) : [];\n  const post = posts.find((p) => p.id === Number(id)) || {\n    id: Number(id),\n    title: \"게시물을 찾을 수 없습니다\",\n    author: \"알 수 없음\",\n    authorId: \"unknown\",\n    isAuthor: false,\n    type: \"sell\",\n    status: \"available\",\n    category: \"알 수 없음\",\n    images: [],\n    modelName: \"알 수 없음\",\n    specifications: {\n      brand: \"알 수 없음\",\n      capacity: \"알 수 없음\",\n      powerConsumption: \"알 수 없음\",\n      size: \"알 수 없음\",\n    },\n    defectQuestions: {\n      cooling: \"알 수 없음\",\n      noise: \"알 수 없음\",\n      exterior: \"알 수 없음\",\n    },\n    description: \"해당 게시물을 찾을 수 없습니다.\",\n    price: 0,\n    sellingInfo: {\n      quantity: 0,\n      location: \"알 수 없음\",\n      pickupAvailable: false,\n      currentParticipants: 0,\n    },\n    createdAt: new Date().toISOString(),\n  };\n\n  useEffect(() => {\n    window.scrollTo(0, 0);\n  }, []);\n\n  const [isScraped, setIsScraped] = useState(post.isScraped || false);\n\n  const getRandomColor = () => {\n    const colors = [\n      \"#FF9AA2\",\n      \"#FFB7B2\",\n      \"#FFDAC1\",\n      \"#E2F0CB\",\n      \"#B5EAD7\",\n      \"#C7CEEA\",\n      \"#9FB3DF\",\n      \"#B8B3E9\",\n      \"#D4A5A5\",\n      \"#9CADCE\",\n    ];\n    return colors[Math.floor(Math.random() * colors.length)];\n  };\n\n  const profileColor = useMemo(() => getRandomColor(), []);\n  const initial = post?.author ? post.author.charAt(0) : \"?\";\n\n  const handleScrap = () => {\n    const updatedPosts = posts.map((p) =>\n      p.id === Number(id) ? { ...p, isScraped: !p.isScraped } : p\n    );\n    localStorage.setItem(\"posts\", JSON.stringify(updatedPosts));\n    setIsScraped(!isScraped);\n  };\n\n  //   const handleEdit = () => {\n  //     navigate(`/post/edit/${id}`);\n  //   };\n\n  //   const handleDelete = () => {\n  //     if (window.confirm(\"정말로 삭제하시겠습니까?\")) {\n  //       // API call to delete post\n  //       navigate(\"/post\");\n  //     }\n  //   };\n\n  const handleBack = () => {\n    navigate(-1);\n  };\n\n  const handleCommentSubmit = (e) => {\n    e.preventDefault();\n    if (comment.trim() && comment.length <= 1000) {\n      setComments([\n        ...comments,\n        {\n          id: Date.now(),\n          author: \"현재 사용자\",\n          content: comment,\n          createdAt: new Date().toISOString(),\n        },\n      ]);\n      setComment(\"\");\n    }\n  };\n\n  const handleCommentDelete = (commentId) => {\n    setComments(comments.filter((comment) => comment.id !== commentId));\n  };\n\n  return (\n    <S.Container>\n      <S.Header>\n        <S.BackButton onClick={handleBack}>\n          <img src={backIcon} alt=\"뒤로 가기\" />\n        </S.BackButton>\n        <S.Title>{post.title}</S.Title>\n        <S.ScrapButton onClick={handleScrap}>\n          <img src={isScraped ? scrapOnIcon : scrapOffIcon} alt=\"스크랩\" />\n        </S.ScrapButton>\n      </S.Header>\n\n      <S.Content>\n        <S.ImageSection>\n          {/* Image carousel will be added here */}\n        </S.ImageSection>\n\n        <S.InfoSection>\n          <S.Price>\n            <span>가격</span>\n            <span>{post.price.toLocaleString()}원</span>\n          </S.Price>\n\n          <S.AuthorSection>\n            <S.AuthorInfo>\n              <S.ProfileInitial backgroundColor={profileColor}>\n                {initial}\n              </S.ProfileInitial>\n              <S.Author>{post.author}</S.Author>\n            </S.AuthorInfo>\n            <S.ChatButton onClick={() => navigate(`/chat/${post.authorId}`)}>\n              채팅하기\n            </S.ChatButton>\n          </S.AuthorSection>\n\n          <S.SpecificationSection>\n            <S.Label>제품 정보</S.Label>\n            <S.SpecificationText>\n              {post?.specifications &&\n              Object.values(post.specifications).some(\n                (value) => value && value !== \"알 수 없음\"\n              ) ? (\n                <p>{post.specifications}</p>\n              ) : null}\n            </S.SpecificationText>\n          </S.SpecificationSection>\n\n          <S.DefectSection>\n            <S.Label>상태 정보</S.Label>\n            <S.DefectGrid>\n              <S.DefectItem>\n                <span>냉각 기능</span>\n                <span>{post?.defectQuestions?.cooling || \"알 수 없음\"}</span>\n              </S.DefectItem>\n              <S.DefectItem>\n                <span>소음</span>\n                <span>{post?.defectQuestions?.noise || \"알 수 없음\"}</span>\n              </S.DefectItem>\n              <S.DefectItem>\n                <span>외관</span>\n                <span>{post?.defectQuestions?.exterior || \"알 수 없음\"}</span>\n              </S.DefectItem>\n            </S.DefectGrid>\n          </S.DefectSection>\n\n          <S.Description>\n            <S.Label>상세 설명</S.Label>\n            <S.DescriptionText>{post.description}</S.DescriptionText>\n          </S.Description>\n        </S.InfoSection>\n\n        <S.CommentSection>\n          <S.Label>댓글</S.Label>\n          <S.CommentForm onSubmit={handleCommentSubmit}>\n            <S.CommentInput\n              value={comment}\n              onChange={(e) => setComment(e.target.value)}\n              maxLength={1000}\n              placeholder=\"댓글을 입력하세요 (최대 1000자)\"\n            />\n            <S.CommentButton type=\"submit\">등록</S.CommentButton>\n          </S.CommentForm>\n          <S.CommentList>\n            {comments.map((comment) => (\n              <S.CommentItem key={comment.id}>\n                <S.CommentHeader>\n                  <S.CommentAuthor>{comment.author}</S.CommentAuthor>\n                  <S.CommentDate>\n                    {new Date(comment.createdAt).toLocaleDateString()}\n                  </S.CommentDate>\n                </S.CommentHeader>\n                <S.CommentContent>{comment.content}</S.CommentContent>\n                {comment.author === \"현재 사용자\" && (\n                  <S.CommentDeleteButton\n                    onClick={() => handleCommentDelete(comment.id)}\n                  >\n                    삭제\n                  </S.CommentDeleteButton>\n                )}\n              </S.CommentItem>\n            ))}\n          </S.CommentList>\n        </S.CommentSection>\n      </S.Content>\n    </S.Container>\n  );\n};\n\nexport default PostDetail;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}