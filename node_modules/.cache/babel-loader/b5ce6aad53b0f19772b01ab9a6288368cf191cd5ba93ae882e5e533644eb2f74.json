{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryuna\\\\sallim\\\\src\\\\pages\\\\My\\\\ScrappedPosts\\\\ScrappedPosts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as S from \"./styled\";\nimport backIcon from \"../../assets/back.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ScrappedPosts = () => {\n  _s();\n  const navigate = useNavigate();\n  const [currentPage, setCurrentPage] = useState(1);\n  const postsPerPage = 12;\n  const savedPosts = localStorage.getItem(\"posts\");\n  const posts = savedPosts ? JSON.parse(savedPosts) : [];\n  const scrappedPosts = posts.filter(post => post.isScraped);\n\n  // 페이지네이션 계산\n  const totalPages = Math.ceil(scrappedPosts.length / postsPerPage);\n  const startIndex = (currentPage - 1) * postsPerPage;\n  const endIndex = startIndex + postsPerPage;\n  const currentPosts = scrappedPosts.slice(startIndex, endIndex);\n  const handlePageChange = pageNumber => {\n    setCurrentPage(pageNumber);\n  };\n  const handleBack = () => {\n    navigate(\"/my-page\");\n  };\n  return /*#__PURE__*/_jsxDEV(S.Container, {\n    children: [/*#__PURE__*/_jsxDEV(S.Header, {\n      children: [/*#__PURE__*/_jsxDEV(S.BackButton, {\n        onClick: handleBack,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: backIcon,\n          alt: \"\\uB4A4\\uB85C \\uAC00\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.Title, {\n        children: \"\\uC2A4\\uD06C\\uB7A9\\uD55C \\uAE00\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.PostGrid, {\n      children: currentPosts.map(post => /*#__PURE__*/_jsxDEV(S.Card, {\n        onClick: () => navigate(`/post/detail/${post.id}`),\n        children: [/*#__PURE__*/_jsxDEV(S.ImageBox, {\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: post.imageUrl,\n            alt: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(S.CardTitle, {\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(S.CardPrice, {\n          children: [post.price.toLocaleString(), \"\\uC6D0\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, post.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(S.Pagination, {\n      children: Array.from({\n        length: totalPages\n      }, (_, i) => i + 1).map(page => /*#__PURE__*/_jsxDEV(S.PageButton, {\n        isActive: currentPage === page,\n        onClick: () => handlePageChange(page),\n        children: page\n      }, page, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(ScrappedPosts, \"Qb1TdfgC3GPK8eOTlcjNyVYADC0=\", false, function () {\n  return [useNavigate];\n});\n_c = ScrappedPosts;\nexport default ScrappedPosts;\nvar _c;\n$RefreshReg$(_c, \"ScrappedPosts\");","map":{"version":3,"names":["React","useState","useNavigate","S","backIcon","jsxDEV","_jsxDEV","ScrappedPosts","_s","navigate","currentPage","setCurrentPage","postsPerPage","savedPosts","localStorage","getItem","posts","JSON","parse","scrappedPosts","filter","post","isScraped","totalPages","Math","ceil","length","startIndex","endIndex","currentPosts","slice","handlePageChange","pageNumber","handleBack","Container","children","Header","BackButton","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","Title","PostGrid","map","Card","id","ImageBox","imageUrl","title","CardTitle","CardPrice","price","toLocaleString","Pagination","Array","from","_","i","page","PageButton","isActive","_c","$RefreshReg$"],"sources":["C:/Users/ryuna/sallim/src/pages/My/ScrappedPosts/ScrappedPosts.jsx"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport * as S from \"./styled\";\r\nimport backIcon from \"../../assets/back.svg\";\r\n\r\nconst ScrappedPosts = () => {\r\n  const navigate = useNavigate();\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const postsPerPage = 12;\r\n\r\n  const savedPosts = localStorage.getItem(\"posts\");\r\n  const posts = savedPosts ? JSON.parse(savedPosts) : [];\r\n  const scrappedPosts = posts.filter((post) => post.isScraped);\r\n\r\n  // 페이지네이션 계산\r\n  const totalPages = Math.ceil(scrappedPosts.length / postsPerPage);\r\n  const startIndex = (currentPage - 1) * postsPerPage;\r\n  const endIndex = startIndex + postsPerPage;\r\n  const currentPosts = scrappedPosts.slice(startIndex, endIndex);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    navigate(\"/my-page\");\r\n  };\r\n\r\n  return (\r\n    <S.Container>\r\n      <S.Header>\r\n        <S.BackButton onClick={handleBack}>\r\n          <img src={backIcon} alt=\"뒤로 가기\" />\r\n        </S.BackButton>\r\n        <S.Title>스크랩한 글</S.Title>\r\n      </S.Header>\r\n      <S.PostGrid>\r\n        {currentPosts.map((post) => (\r\n          <S.Card\r\n            key={post.id}\r\n            onClick={() => navigate(`/post/detail/${post.id}`)}\r\n          >\r\n            <S.ImageBox>\r\n              <img src={post.imageUrl} alt={post.title} />\r\n            </S.ImageBox>\r\n            <S.CardTitle>{post.title}</S.CardTitle>\r\n            <S.CardPrice>{post.price.toLocaleString()}원</S.CardPrice>\r\n          </S.Card>\r\n        ))}\r\n      </S.PostGrid>\r\n      {totalPages > 1 && (\r\n        <S.Pagination>\r\n          {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (\r\n            <S.PageButton\r\n              key={page}\r\n              isActive={currentPage === page}\r\n              onClick={() => handlePageChange(page)}\r\n            >\r\n              {page}\r\n            </S.PageButton>\r\n          ))}\r\n        </S.Pagination>\r\n      )}\r\n    </S.Container>\r\n  );\r\n};\r\n\r\nexport default ScrappedPosts;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,KAAKC,CAAC,MAAM,UAAU;AAC7B,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAMC,QAAQ,GAAGP,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACQ,WAAW,EAAEC,cAAc,CAAC,GAAGV,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAMW,YAAY,GAAG,EAAE;EAEvB,MAAMC,UAAU,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAChD,MAAMC,KAAK,GAAGH,UAAU,GAAGI,IAAI,CAACC,KAAK,CAACL,UAAU,CAAC,GAAG,EAAE;EACtD,MAAMM,aAAa,GAAGH,KAAK,CAACI,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACC,SAAS,CAAC;;EAE5D;EACA,MAAMC,UAAU,GAAGC,IAAI,CAACC,IAAI,CAACN,aAAa,CAACO,MAAM,GAAGd,YAAY,CAAC;EACjE,MAAMe,UAAU,GAAG,CAACjB,WAAW,GAAG,CAAC,IAAIE,YAAY;EACnD,MAAMgB,QAAQ,GAAGD,UAAU,GAAGf,YAAY;EAC1C,MAAMiB,YAAY,GAAGV,aAAa,CAACW,KAAK,CAACH,UAAU,EAAEC,QAAQ,CAAC;EAE9D,MAAMG,gBAAgB,GAAIC,UAAU,IAAK;IACvCrB,cAAc,CAACqB,UAAU,CAAC;EAC5B,CAAC;EAED,MAAMC,UAAU,GAAGA,CAAA,KAAM;IACvBxB,QAAQ,CAAC,UAAU,CAAC;EACtB,CAAC;EAED,oBACEH,OAAA,CAACH,CAAC,CAAC+B,SAAS;IAAAC,QAAA,gBACV7B,OAAA,CAACH,CAAC,CAACiC,MAAM;MAAAD,QAAA,gBACP7B,OAAA,CAACH,CAAC,CAACkC,UAAU;QAACC,OAAO,EAAEL,UAAW;QAAAE,QAAA,eAChC7B,OAAA;UAAKiC,GAAG,EAAEnC,QAAS;UAACoC,GAAG,EAAC;QAAO;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC,eACftC,OAAA,CAACH,CAAC,CAAC0C,KAAK;QAAAV,QAAA,EAAC;MAAM;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAS,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACjB,CAAC,eACXtC,OAAA,CAACH,CAAC,CAAC2C,QAAQ;MAAAX,QAAA,EACRN,YAAY,CAACkB,GAAG,CAAE1B,IAAI,iBACrBf,OAAA,CAACH,CAAC,CAAC6C,IAAI;QAELV,OAAO,EAAEA,CAAA,KAAM7B,QAAQ,CAAC,gBAAgBY,IAAI,CAAC4B,EAAE,EAAE,CAAE;QAAAd,QAAA,gBAEnD7B,OAAA,CAACH,CAAC,CAAC+C,QAAQ;UAAAf,QAAA,eACT7B,OAAA;YAAKiC,GAAG,EAAElB,IAAI,CAAC8B,QAAS;YAACX,GAAG,EAAEnB,IAAI,CAAC+B;UAAM;YAAAX,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC,CAAC,eACbtC,OAAA,CAACH,CAAC,CAACkD,SAAS;UAAAlB,QAAA,EAAEd,IAAI,CAAC+B;QAAK;UAAAX,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAc,CAAC,eACvCtC,OAAA,CAACH,CAAC,CAACmD,SAAS;UAAAnB,QAAA,GAAEd,IAAI,CAACkC,KAAK,CAACC,cAAc,CAAC,CAAC,EAAC,QAAC;QAAA;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa,CAAC;MAAA,GAPpDvB,IAAI,CAAC4B,EAAE;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQN,CACT;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACQ,CAAC,EACZrB,UAAU,GAAG,CAAC,iBACbjB,OAAA,CAACH,CAAC,CAACsD,UAAU;MAAAtB,QAAA,EACVuB,KAAK,CAACC,IAAI,CAAC;QAAEjC,MAAM,EAAEH;MAAW,CAAC,EAAE,CAACqC,CAAC,EAAEC,CAAC,KAAKA,CAAC,GAAG,CAAC,CAAC,CAACd,GAAG,CAAEe,IAAI,iBAC5DxD,OAAA,CAACH,CAAC,CAAC4D,UAAU;QAEXC,QAAQ,EAAEtD,WAAW,KAAKoD,IAAK;QAC/BxB,OAAO,EAAEA,CAAA,KAAMP,gBAAgB,CAAC+B,IAAI,CAAE;QAAA3B,QAAA,EAErC2B;MAAI,GAJAA,IAAI;QAAArB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKG,CACf;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACU,CACf;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACU,CAAC;AAElB,CAAC;AAACpC,EAAA,CA5DID,aAAa;EAAA,QACAL,WAAW;AAAA;AAAA+D,EAAA,GADxB1D,aAAa;AA8DnB,eAAeA,aAAa;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}