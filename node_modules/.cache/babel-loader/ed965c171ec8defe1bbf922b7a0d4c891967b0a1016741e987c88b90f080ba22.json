{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryuna\\\\sallim\\\\src\\\\pages\\\\ChatList\\\\ChatList.jsx\";\nimport React from \"react\";\nimport { Container, ChatListWrapper, ChatItem, ProfileCircle, ChatInfo, ChatTitle, ChatMeta, ChatPreview, UnreadBadge } from \"./styled\";\n\n// 더미 데이터 예시\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst chatList = [{\n  id: 1,\n  nickname: \"Sarah Wilson\",\n  postTitle: \"Vintage Camera Listing\",\n  lastMessage: \"Hey, is this still available?\",\n  lastTime: \"14:34\",\n  unread: false\n}, {\n  id: 2,\n  nickname: \"Mike Johnson\",\n  postTitle: \"Mountain Bike For Sale\",\n  lastMessage: \"Can we meet tomorrow at 2 PM?\",\n  lastTime: \"어제\",\n  unread: true,\n  unreadCount: 3\n}, {\n  id: 3,\n  nickname: \"Emma Davis\",\n  postTitle: \"iPhone 13 Pro\",\n  lastMessage: \"Thank you for the quick response!\",\n  lastTime: \"월\",\n  unread: false\n}];\nconst getInitial = nickname => nickname.charAt(0).toUpperCase();\nconst ChatList = () => {\n  // 최신 메시지 순 정렬(여기선 이미 정렬된 더미)\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(ChatListWrapper, {\n      children: chatList.map(chat => /*#__PURE__*/_jsxDEV(ChatItem, {\n        children: [/*#__PURE__*/_jsxDEV(ProfileCircle, {\n          children: getInitial(chat.nickname)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(ChatInfo, {\n          children: [/*#__PURE__*/_jsxDEV(ChatTitle, {\n            children: chat.nickname\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ChatMeta, {\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              children: chat.lastTime\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 17\n            }, this), chat.unread && /*#__PURE__*/_jsxDEV(UnreadBadge, {\n              children: chat.unreadCount || 1\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              color: \"#888\",\n              fontSize: 13\n            },\n            children: chat.postTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(ChatPreview, {\n            children: chat.lastMessage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this)]\n      }, chat.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_c = ChatList;\nexport default ChatList;\nvar _c;\n$RefreshReg$(_c, \"ChatList\");","map":{"version":3,"names":["React","Container","ChatListWrapper","ChatItem","ProfileCircle","ChatInfo","ChatTitle","ChatMeta","ChatPreview","UnreadBadge","jsxDEV","_jsxDEV","chatList","id","nickname","postTitle","lastMessage","lastTime","unread","unreadCount","getInitial","charAt","toUpperCase","ChatList","children","map","chat","fileName","_jsxFileName","lineNumber","columnNumber","style","color","fontSize","_c","$RefreshReg$"],"sources":["C:/Users/ryuna/sallim/src/pages/ChatList/ChatList.jsx"],"sourcesContent":["import React from \"react\";\r\nimport {\r\n  Container,\r\n  ChatListWrapper,\r\n  ChatItem,\r\n  ProfileCircle,\r\n  ChatInfo,\r\n  ChatTitle,\r\n  ChatMeta,\r\n  ChatPreview,\r\n  UnreadBadge,\r\n} from \"./styled\";\r\n\r\n// 더미 데이터 예시\r\nconst chatList = [\r\n  {\r\n    id: 1,\r\n    nickname: \"Sarah Wilson\",\r\n    postTitle: \"Vintage Camera Listing\",\r\n    lastMessage: \"Hey, is this still available?\",\r\n    lastTime: \"14:34\",\r\n    unread: false,\r\n  },\r\n  {\r\n    id: 2,\r\n    nickname: \"Mike Johnson\",\r\n    postTitle: \"Mountain Bike For Sale\",\r\n    lastMessage: \"Can we meet tomorrow at 2 PM?\",\r\n    lastTime: \"어제\",\r\n    unread: true,\r\n    unreadCount: 3,\r\n  },\r\n  {\r\n    id: 3,\r\n    nickname: \"Emma Davis\",\r\n    postTitle: \"iPhone 13 Pro\",\r\n    lastMessage: \"Thank you for the quick response!\",\r\n    lastTime: \"월\",\r\n    unread: false,\r\n  },\r\n];\r\n\r\nconst getInitial = (nickname) => nickname.charAt(0).toUpperCase();\r\n\r\nconst ChatList = () => {\r\n  // 최신 메시지 순 정렬(여기선 이미 정렬된 더미)\r\n  return (\r\n    <Container>\r\n      <ChatListWrapper>\r\n        {chatList.map((chat) => (\r\n          <ChatItem key={chat.id}>\r\n            <ProfileCircle>{getInitial(chat.nickname)}</ProfileCircle>\r\n            <ChatInfo>\r\n              <ChatTitle>{chat.nickname}</ChatTitle>\r\n              <ChatMeta>\r\n                <span>{chat.lastTime}</span>\r\n                {chat.unread && (\r\n                  <UnreadBadge>{chat.unreadCount || 1}</UnreadBadge>\r\n                )}\r\n              </ChatMeta>\r\n              <div style={{ color: \"#888\", fontSize: 13 }}>\r\n                {chat.postTitle}\r\n              </div>\r\n              <ChatPreview>{chat.lastMessage}</ChatPreview>\r\n            </ChatInfo>\r\n          </ChatItem>\r\n        ))}\r\n      </ChatListWrapper>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default ChatList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}