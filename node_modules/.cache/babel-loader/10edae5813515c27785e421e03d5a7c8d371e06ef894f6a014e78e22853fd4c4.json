{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryuna\\\\sallim\\\\src\\\\components\\\\common\\\\Header\\\\Header.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as S from \"./styled\";\nimport logoutIcon from \"../../../assets/logout.svg\";\nimport alarmOffIcon from \"../../../assets/alarm-off.svg\";\nimport alarmOnIcon from \"../../../assets/alarm-on.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Header = () => {\n  _s();\n  const navigate = useNavigate();\n  const [hasAlarm, setHasAlarm] = useState(false); // 실제로는 API나 상태 관리를 통해 알람 상태를 관리해야 함\n\n  const handleLogout = () => {\n    // TODO: 로그아웃 로직 구현\n    localStorage.removeItem(\"token\");\n    navigate(\"/login\");\n  };\n  return /*#__PURE__*/_jsxDEV(S.HeaderContainer, {\n    children: /*#__PURE__*/_jsxDEV(S.ButtonGroup, {\n      children: [/*#__PURE__*/_jsxDEV(S.IconButton, {\n        onClick: handleLogout,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: logoutIcon,\n          alt: \"\\uB85C\\uADF8\\uC544\\uC6C3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.IconButton, {\n        $hasAlarm: hasAlarm,\n        onClick: navigate(\"/notification\"),\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: hasAlarm ? alarmOnIcon : alarmOffIcon,\n          alt: \"\\uC54C\\uB9BC\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), hasAlarm && /*#__PURE__*/_jsxDEV(S.AlarmDot, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 19,\n    columnNumber: 5\n  }, this);\n};\n_s(Header, \"MoF87MpltEiMiwpj0ockaUo35oY=\", false, function () {\n  return [useNavigate];\n});\n_c = Header;\nexport default Header;\nvar _c;\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"names":["React","useState","useNavigate","S","logoutIcon","alarmOffIcon","alarmOnIcon","jsxDEV","_jsxDEV","Header","_s","navigate","hasAlarm","setHasAlarm","handleLogout","localStorage","removeItem","HeaderContainer","children","ButtonGroup","IconButton","onClick","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","$hasAlarm","AlarmDot","_c","$RefreshReg$"],"sources":["C:/Users/ryuna/sallim/src/components/common/Header/Header.jsx"],"sourcesContent":["import React, { useState } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport * as S from \"./styled\";\nimport logoutIcon from \"../../../assets/logout.svg\";\nimport alarmOffIcon from \"../../../assets/alarm-off.svg\";\nimport alarmOnIcon from \"../../../assets/alarm-on.svg\";\n\nconst Header = () => {\n  const navigate = useNavigate();\n  const [hasAlarm, setHasAlarm] = useState(false); // 실제로는 API나 상태 관리를 통해 알람 상태를 관리해야 함\n\n  const handleLogout = () => {\n    // TODO: 로그아웃 로직 구현\n    localStorage.removeItem(\"token\");\n    navigate(\"/login\");\n  };\n\n  return (\n    <S.HeaderContainer>\n      <S.ButtonGroup>\n        <S.IconButton onClick={handleLogout}>\n          <img src={logoutIcon} alt=\"로그아웃\" />\n        </S.IconButton>\n        <S.IconButton $hasAlarm={hasAlarm} onClick={navigate(\"/notification\")}>\n          <img src={hasAlarm ? alarmOnIcon : alarmOffIcon} alt=\"알림\" />\n          {hasAlarm && <S.AlarmDot />}\n        </S.IconButton>\n      </S.ButtonGroup>\n    </S.HeaderContainer>\n  );\n};\n\nexport default Header;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAO,KAAKC,CAAC,MAAM,UAAU;AAC7B,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,WAAW,MAAM,8BAA8B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvD,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,QAAQ,EAAEC,WAAW,CAAC,GAAGZ,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;;EAEjD,MAAMa,YAAY,GAAGA,CAAA,KAAM;IACzB;IACAC,YAAY,CAACC,UAAU,CAAC,OAAO,CAAC;IAChCL,QAAQ,CAAC,QAAQ,CAAC;EACpB,CAAC;EAED,oBACEH,OAAA,CAACL,CAAC,CAACc,eAAe;IAAAC,QAAA,eAChBV,OAAA,CAACL,CAAC,CAACgB,WAAW;MAAAD,QAAA,gBACZV,OAAA,CAACL,CAAC,CAACiB,UAAU;QAACC,OAAO,EAAEP,YAAa;QAAAI,QAAA,eAClCV,OAAA;UAAKc,GAAG,EAAElB,UAAW;UAACmB,GAAG,EAAC;QAAM;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACvB,CAAC,eACfnB,OAAA,CAACL,CAAC,CAACiB,UAAU;QAACQ,SAAS,EAAEhB,QAAS;QAACS,OAAO,EAAEV,QAAQ,CAAC,eAAe,CAAE;QAAAO,QAAA,gBACpEV,OAAA;UAAKc,GAAG,EAAEV,QAAQ,GAAGN,WAAW,GAAGD,YAAa;UAACkB,GAAG,EAAC;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,EAC3Df,QAAQ,iBAAIJ,OAAA,CAACL,CAAC,CAAC0B,QAAQ;UAAAL,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACf,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAExB,CAAC;AAACjB,EAAA,CAvBID,MAAM;EAAA,QACOP,WAAW;AAAA;AAAA4B,EAAA,GADxBrB,MAAM;AAyBZ,eAAeA,MAAM;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}