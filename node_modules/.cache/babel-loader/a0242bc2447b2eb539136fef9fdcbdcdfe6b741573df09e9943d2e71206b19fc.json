{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ryuna\\\\sallim\\\\src\\\\pages\\\\SignUp\\\\SignUp.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport Input from \"../../components/Input/Input\";\nimport * as S from \"./styled\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SignUp = () => {\n  _s();\n  const [formData, setFormData] = useState({\n    username: \"\",\n    password: \"\",\n    name: \"\",\n    nickname: \"\",\n    isBuyer: false\n  });\n  const [errors, setErrors] = useState({});\n  const [isNicknameAvailable, setIsNicknameAvailable] = useState(null);\n  const nicknameTimeoutRef = useRef(null);\n  const handleChange = e => {\n    const {\n      name,\n      value,\n      type,\n      checked\n    } = e.target;\n    setFormData(prev => ({\n      ...prev,\n      [name]: type === \"checkbox\" ? checked : value\n    }));\n    if (name === \"nickname\") {\n      setIsNicknameAvailable(null);\n      if (nicknameTimeoutRef.current) {\n        clearTimeout(nicknameTimeoutRef.current);\n      }\n    }\n  };\n  useEffect(() => {\n    if (formData.nickname) {\n      nicknameTimeoutRef.current = setTimeout(() => {\n        // 실제로는 API 호출로 중복 확인\n        // 임시로 랜덤하게 결정\n        const isAvailable = Math.random() > 0.5;\n        setIsNicknameAvailable(isAvailable);\n      }, 1000);\n    }\n    return () => {\n      if (nicknameTimeoutRef.current) {\n        clearTimeout(nicknameTimeoutRef.current);\n      }\n    };\n  }, [formData.nickname]);\n  const validateForm = () => {\n    const newErrors = {};\n    if (!formData.username) newErrors.username = \"아이디를 입력해주세요\";\n    if (!formData.password) newErrors.password = \"비밀번호를 입력해주세요\";\n    if (!formData.name) newErrors.name = \"이름을 입력해주세요\";\n    if (!formData.nickname) newErrors.nickname = \"닉네임을 입력해주세요\";\n    if (formData.nickname.length > 10) newErrors.nickname = \"닉네임은 10자 이내로 입력해주세요\";\n    if (isNicknameAvailable === false) newErrors.nickname = \"이미 사용 중인 닉네임입니다\";\n    setErrors(newErrors);\n    return Object.keys(newErrors).length === 0;\n  };\n  const handleSubmit = e => {\n    e.preventDefault();\n    if (validateForm()) {\n      // 회원가입 처리 로직\n      console.log(\"회원가입 성공:\", formData);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(S.SignUpContainer, {\n    children: [/*#__PURE__*/_jsxDEV(Input, {\n      label: \"\\uC544\\uC774\\uB514\",\n      name: \"username\",\n      value: formData.username,\n      onChange: handleChange,\n      error: errors.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      label: \"\\uBE44\\uBC00\\uBC88\\uD638\",\n      name: \"password\",\n      type: \"password\",\n      value: formData.password,\n      onChange: handleChange,\n      error: errors.password\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      label: \"\\uC774\\uB984\",\n      name: \"name\",\n      value: formData.name,\n      onChange: handleChange,\n      error: errors.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Input, {\n      label: \"\\uB2C9\\uB124\\uC784\",\n      name: \"nickname\",\n      value: formData.nickname,\n      onChange: handleChange,\n      error: errors.nickname,\n      maxLength: 10\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), formData.nickname && isNicknameAvailable !== null && /*#__PURE__*/_jsxDEV(S.NicknameStatus, {\n      isAvailable: isNicknameAvailable,\n      children: isNicknameAvailable ? \"사용 가능한 닉네임입니다\" : \"이미 사용 중인 닉네임입니다\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(S.CheckboxContainer, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        name: \"isBuyer\",\n        checked: formData.isBuyer,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(S.CheckboxLabel, {\n        children: \"\\uBC14\\uC774\\uC5B4 \\uC5EC\\uBD80\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(S.Button, {\n      type: \"submit\",\n      children: \"\\uD68C\\uC6D0\\uAC00\\uC785\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n};\n_s(SignUp, \"34Ob48rMxnaif3WSCLVMUQLLckc=\");\n_c = SignUp;\nexport default SignUp;\nvar _c;\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useState","useEffect","useRef","Input","S","jsxDEV","_jsxDEV","SignUp","_s","formData","setFormData","username","password","name","nickname","isBuyer","errors","setErrors","isNicknameAvailable","setIsNicknameAvailable","nicknameTimeoutRef","handleChange","e","value","type","checked","target","prev","current","clearTimeout","setTimeout","isAvailable","Math","random","validateForm","newErrors","length","Object","keys","handleSubmit","preventDefault","console","log","SignUpContainer","children","label","onChange","error","fileName","_jsxFileName","lineNumber","columnNumber","maxLength","NicknameStatus","CheckboxContainer","CheckboxLabel","Button","_c","$RefreshReg$"],"sources":["C:/Users/ryuna/sallim/src/pages/SignUp/SignUp.jsx"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport Input from \"../../components/Input/Input\";\r\nimport * as S from \"./styled\";\r\n\r\nconst SignUp = () => {\r\n  const [formData, setFormData] = useState({\r\n    username: \"\",\r\n    password: \"\",\r\n    name: \"\",\r\n    nickname: \"\",\r\n    isBuyer: false,\r\n  });\r\n\r\n  const [errors, setErrors] = useState({});\r\n  const [isNicknameAvailable, setIsNicknameAvailable] = useState(null);\r\n  const nicknameTimeoutRef = useRef(null);\r\n\r\n  const handleChange = (e) => {\r\n    const { name, value, type, checked } = e.target;\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [name]: type === \"checkbox\" ? checked : value,\r\n    }));\r\n\r\n    if (name === \"nickname\") {\r\n      setIsNicknameAvailable(null);\r\n      if (nicknameTimeoutRef.current) {\r\n        clearTimeout(nicknameTimeoutRef.current);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (formData.nickname) {\r\n      nicknameTimeoutRef.current = setTimeout(() => {\r\n        // 실제로는 API 호출로 중복 확인\r\n        // 임시로 랜덤하게 결정\r\n        const isAvailable = Math.random() > 0.5;\r\n        setIsNicknameAvailable(isAvailable);\r\n      }, 1000);\r\n    }\r\n\r\n    return () => {\r\n      if (nicknameTimeoutRef.current) {\r\n        clearTimeout(nicknameTimeoutRef.current);\r\n      }\r\n    };\r\n  }, [formData.nickname]);\r\n\r\n  const validateForm = () => {\r\n    const newErrors = {};\r\n\r\n    if (!formData.username) newErrors.username = \"아이디를 입력해주세요\";\r\n    if (!formData.password) newErrors.password = \"비밀번호를 입력해주세요\";\r\n    if (!formData.name) newErrors.name = \"이름을 입력해주세요\";\r\n    if (!formData.nickname) newErrors.nickname = \"닉네임을 입력해주세요\";\r\n    if (formData.nickname.length > 10)\r\n      newErrors.nickname = \"닉네임은 10자 이내로 입력해주세요\";\r\n    if (isNicknameAvailable === false)\r\n      newErrors.nickname = \"이미 사용 중인 닉네임입니다\";\r\n\r\n    setErrors(newErrors);\r\n    return Object.keys(newErrors).length === 0;\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (validateForm()) {\r\n      // 회원가입 처리 로직\r\n      console.log(\"회원가입 성공:\", formData);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <S.SignUpContainer>\r\n      <Input\r\n        label=\"아이디\"\r\n        name=\"username\"\r\n        value={formData.username}\r\n        onChange={handleChange}\r\n        error={errors.username}\r\n      />\r\n      <Input\r\n        label=\"비밀번호\"\r\n        name=\"password\"\r\n        type=\"password\"\r\n        value={formData.password}\r\n        onChange={handleChange}\r\n        error={errors.password}\r\n      />\r\n      <Input\r\n        label=\"이름\"\r\n        name=\"name\"\r\n        value={formData.name}\r\n        onChange={handleChange}\r\n        error={errors.name}\r\n      />\r\n      <Input\r\n        label=\"닉네임\"\r\n        name=\"nickname\"\r\n        value={formData.nickname}\r\n        onChange={handleChange}\r\n        error={errors.nickname}\r\n        maxLength={10}\r\n      />\r\n      {formData.nickname && isNicknameAvailable !== null && (\r\n        <S.NicknameStatus isAvailable={isNicknameAvailable}>\r\n          {isNicknameAvailable\r\n            ? \"사용 가능한 닉네임입니다\"\r\n            : \"이미 사용 중인 닉네임입니다\"}\r\n        </S.NicknameStatus>\r\n      )}\r\n      <S.CheckboxContainer>\r\n        <input\r\n          type=\"checkbox\"\r\n          name=\"isBuyer\"\r\n          checked={formData.isBuyer}\r\n          onChange={handleChange}\r\n        />\r\n        <S.CheckboxLabel>바이어 여부</S.CheckboxLabel>\r\n      </S.CheckboxContainer>\r\n      <S.Button type=\"submit\">회원가입</S.Button>\r\n    </S.SignUpContainer>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}